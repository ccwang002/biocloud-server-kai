# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-14 08:26
from __future__ import unicode_literals

from django.db import migrations, models


def gen_condition_order(apps, schema_editor, lang_mapping=None):
    """Guess the condition order.

    (ALL) will always have order 0.
    For the rest of the conditions, they are sorted by their name.

    Condition order is determined per experiment.
    """
    Experiment = apps.get_model('experiments', 'Experiment')
    db_alias = schema_editor.connection.alias

    for experiment in Experiment.objects.using(db_alias).all():
        conditions = experiment.conditions.all()
        # We don't user Experiment.condition_names here since it may depend on
        # database columns that does not exist
        user_cond_names = set(
            conditions.values_list('condition', flat=True).distinct()
        )
        user_cond_names.discard('(All)')
        user_cond_names = sorted(user_cond_names)
        cond_mapping = {
            cond: cond_order
            for cond_order, cond in enumerate(user_cond_names, 1)
        }
        cond_mapping['(All)'] = 0
        for cond, cond_order in cond_mapping.items():
            conditions.filter(
                condition=cond,
            ).update(
                condition_order=cond_order
            )


class Migration(migrations.Migration):

    dependencies = [
        ('experiments', '0002_auto_20160612_1650'),
    ]

    operations = [
        migrations.AddField(
            model_name='condition',
            name='condition_order',
            field=models.IntegerField(default=1, help_text='Order of the condition. 0 should always represent the special condition (All).'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='condition',
            name='condition',
            field=models.CharField(help_text='Name of the condition. (All) is a special condition which implies this data source appears in every condition.', max_length=512),
        ),
        migrations.RunPython(gen_condition_order, migrations.RunPython.noop),
    ]
